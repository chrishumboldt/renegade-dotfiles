unbind r
bind r source-file ~/.tmux.conf

set -g prefix C-a

# Set default terminal mode to 256 colors.
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# Act like vim.
setw -g mode-keys vi
bind-key Left select-pane -L
bind-key Down select-pane -D
bind-key Up select-pane -U
bind-key Right select-pane -R

# To copy stuff.
set-option -s set-clipboard off
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X rectangle-toggle
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -se c -i'
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -se c -i'

# Shorten command delay.
set -sg escape-time 1

# Don't rename windows automatically.
set -g allow-rename off

# Mouse control.
set -g mouse on

# Split panes.
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# '@pane-is-vim' is a pane-local option that is set by the plugin on load,
# and unset when Neovim exits or suspends; note that this means you'll probably
# not want to lazy-load smart-splits.nvim, as the variable won't be set until
# the plugin is loaded

# Alternatively, if you want to disable wrapping when moving in non-neovim panes, use these bindings
bind-key -n C-Left if -F '#{@pane-is-vim}' { send-keys C-Left } { if -F '#{pane_at_left}'   '' 'select-pane -L' }
bind-key -n C-Down if -F '#{@pane-is-vim}' { send-keys C-Down } { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n C-Up if -F '#{@pane-is-vim}' { send-keys C-Up } { if -F '#{pane_at_top}'    '' 'select-pane -U' }
bind-key -n C-Right if -F '#{@pane-is-vim}' { send-keys C-Right } { if -F '#{pane_at_right}'  '' 'select-pane -R' }

# Smart pane resizing with awareness of Neovim splits.
bind-key -n M-Left if -F "#{@pane-is-vim}" 'send-keys M-Left' 'resize-pane -L 3'
bind-key -n M-Down if -F "#{@pane-is-vim}" 'send-keys M-Down' 'resize-pane -D 3'
bind-key -n M-Up if -F "#{@pane-is-vim}" 'send-keys M-Up' 'resize-pane -U 3'
bind-key -n M-Right if -F "#{@pane-is-vim}" 'send-keys M-Right' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-Left' select-pane -L
bind-key -T copy-mode-vi 'C-Down' select-pane -D
bind-key -T copy-mode-vi 'C-Up' select-pane -U
bind-key -T copy-mode-vi 'C-Right' select-pane -R

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'catppuccin/tmux'

# Theme settings.
set -g status-position top
set -g @catppuccin_flavour 'mocha'
set -g @catppuccin_status_left_separator "█"
set -g @catppuccin_status_modules_right "application session"
set -g @catppuccin_status_right_separator "█"
set -g @catppuccin_window_current_fill "all"
set -g @catppuccin_window_default_fill "none"
set -g @catppuccin_window_middle_separator " | "
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_right_separator "█ "

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf).
run '~/.tmux/plugins/tpm/tpm'
